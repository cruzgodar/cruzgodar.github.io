import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{hsvToRgb}from"/scripts/applets/applet.min.js";import{browserSupportsP3,browserSupportsRec2020,convertColor}from"/scripts/src/browser.min.js";import{addTemporaryInterval,addTemporaryWorker}from"/scripts/src/main.min.js";import{siteSettings}from"/scripts/src/settings.min.js";import{animate,clamp,sleep}from"/scripts/src/utils.min.js";import{WilsonCPU}from"/scripts/wilson.min.js";const LITERAL=0,LAMBDA=1,APPLICATION=2,CONNECTOR=3,shorthands={0:"(λfλxx)",F:"(λxλyy)",1:"(λfλxf(x))",2:"(λfλxf(f(x)))",3:"(λfλxf(f(f(x))))",4:"(λfλxf(f(f(f(x)))))",5:"(λfλxf(f(f(f(f(x))))))",6:"(λfλxf(f(f(f(f(f(x)))))))",7:"(λfλxf(f(f(f(f(f(f(x))))))))",8:"(λfλxf(f(f(f(f(f(f(f(x)))))))))",9:"(λfλxf(f(f(f(f(f(f(f(f(x))))))))))",">":"(λnλfλxf(nf(x)))","<":"(λnλfλxn(λgλhh(gf))(λux)I)",I:"(λxx)",K:"(λxλyx)",T:"(λxλyx)",S:"(λxλyλz(xz)(yz))",Y:"(λf(λxf(xx))(λxf(xx)))",_:"(λnn(λxF)T)","!":"(λbbFT)","&":"(λbλccbF)","|":"(λbλcbTc)",",":"(λxλyλiixy)","'":"(λpp(λxλyx))",'"':"(λpp(λxλyy))","+":"(λaλbλfλx(af)(bfx))","-":"(λmλnn<m)","*":"(λaλbλfb(af))","/":"(λn((λf(λxxx)(λxf(xx)))(λcλnλmλfλx(λd_d(Ffx)(f(cdmfx)))(-nm)))(>n))","^":"(λaλbba)","=":"(λaλb(a(λnλfλxn(λgλhh(gf))(λux)(λuu))b(λxF)T)(b(λnλfλxn(λgλhh(gf))(λux)(λuu))a(λxF)T)(F))"};function getRgbFromColorString(color){var e;if(color.startsWith("rgba("))return e=color.lastIndexOf(","),color.slice(5,e).replaceAll(" ","").split(",").map(Number);if(color.startsWith("rgb("))return color.slice(4,-1).replaceAll(" ","").split(",").map(Number);if(color.startsWith("color(display-p3 "))return e=color.lastIndexOf(" /"),color.slice(17,e).split(" ").map(x=>255*parseFloat(x));if(color.startsWith("color(rec2020 "))return e=color.lastIndexOf(" /"),color.slice(14,e).split(" ").map(x=>255*parseFloat(x));throw new Error("Invalid color string.")}class LambdaCalculus extends AnimationFrameApplet{outerExpressionSize;resolution=2e3;lambdaIndex=0;numLambdas=0;animationTime=500;animationPaused=!1;animationRunning=!1;needReload=!1;reloaded=Promise.resolve();reloadedResolve;expressionTextarea;nextId=0;nextUniqueArgument=0;worker;constructor({canvas,expressionTextarea}){super(canvas),this.expressionTextarea=expressionTextarea;var e={canvasWidth:this.resolution,fullscreenOptions:{useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"},verbose:window.DEBUG};this.wilson=new WilsonCPU(this.canvas,e)}async run({expression:expressionString,expandShorthands=!1,updateExpressionDuringReduction=!1,betaReduce=!1,maxBetaReductions=1/0}){if(!this.needReload){this.animationRunning&&(this.reloaded=new Promise(resolve=>this.reloadedResolve=resolve),this.needReload=!0,await this.reloaded,this.needReload=!1,this.animationRunning=!1),expressionString=expressionString.replaceAll(/[\n\t\s.]/g,""),this.numLambdas=this.computeNumLambdasFromString(expressionString),this.lambdaIndex=0;const r=this.parseExpression(expressionString,expandShorthands);this.setupExpression(r),this.drawExpression(r);var e=this.expressionToString({expression:r}).replaceAll(/\[LEFTCARET\]/g,"&lt;"),s=this.expressionToString({expression:r,addHtml:!1}).replaceAll(/\[LEFTCARET\]/g,"<");if(betaReduce){if(this.expressionTextarea.syncOverlay=!1,expandShorthands)this.animateIteratedBetaReduction(r,maxBetaReductions,updateExpressionDuringReduction);else{const r=this.parseExpression(expressionString,!0);this.setupExpression(r),this.animateIteratedBetaReduction(r,maxBetaReductions,updateExpressionDuringReduction)}this.expressionTextarea.syncOverlay=!0}return[e,s]}}computeNumLambdasFromString(expressionString){for(;;){let e=!1;for(const r in shorthands)expressionString.includes(r)&&(expressionString=expressionString.replaceAll(r,shorthands[r]),e=!0);if(!e)break}let e=0;var s=expressionString.split("");for(let i=0;i<s.length;i++)"λ"===s[i]?e++:s[i]in shorthands&&(e+=shorthands[s[i]].split("λ").length-1);return e}parseExpression(expressionString,expandShorthands){if(0===expressionString.length)throw new Error("Empty expression.");for(var r=[];0<expressionString.length;)if("λ"===expressionString[0]){if(expressionString.length<3)throw new Error("Expression too short.");var i=expressionString[1],e=expressionString.slice(2);r.push({type:LAMBDA,argument:i,argumentText:i,body:this.parseExpression(e,expandShorthands),literalColor:{h:this.lambdaIndex/this.numLambdas,s:.8,v:1}}),this.lambdaIndex++,expressionString=""}else if("("===expressionString[0]){let e=1,s=1;for(;0<s;)"("===expressionString[e]?s++:")"===expressionString[e]&&s--,e++;i=this.parseExpression(expressionString.slice(1,e-1),expandShorthands);i.startText="("+(i.startText??""),i.endText=(i.endText??"")+")",r.push(i),expressionString=expressionString.slice(e)}else expressionString[0]in shorthands?(r.push(this.parseExpression(shorthands[expressionString[0]],expandShorthands)),expandShorthands||(r[r.length-1].shorthandText="<"===expressionString[0]?"[LEFTCARET]":expressionString[0])):r.push({type:LITERAL,value:expressionString[0],valueText:expressionString[0]}),expressionString=expressionString.slice(1);if(1===r.length)return r[0];let s=r[0];for(let t=1;t<r.length;t++)s={type:APPLICATION,function:s,input:r[t]};return s}validateExpression(expression,scopedVariables=[]){if(expression.type!==LITERAL)return expression.type===LAMBDA?this.validateExpression(expression.body,[...scopedVariables,expression.argument]):this.validateExpression(expression.function,scopedVariables)&&this.validateExpression(expression.input,scopedVariables);if(scopedVariables.includes(expression.value))return!0;throw new Error(`Undefined variable ${expression.value}.`)}checkIfExpressionContainsApplication(expression){return expression.type!==LITERAL&&(expression.type!==LAMBDA||this.checkIfExpressionContainsApplication(expression.body))}setupExpression(expression,isBetaReduction=!1){this.addExpressionSize(expression),this.checkIfExpressionContainsApplication(expression)&&expression.height--,this.outerExpressionSize=Math.max(expression.width,expression.height),expression.row=Math.max((this.outerExpressionSize-expression.height)/2,0),expression.col=Math.max((this.outerExpressionSize-expression.width)/2,0),this.addExpressionLocation(expression),this.addExpressionBindings(expression),this.addExpressionColors(expression),this.addExpressionRects(expression,isBetaReduction),expression.type===APPLICATION&&(expression.rects[0].row++,expression.rects[1].height++,expression.rects[2].height++),expression.rectIndex={},this.addExpressionRectIndices(expression,expression.rectIndex)}addExpressionSize(expression){expression.type===LAMBDA?(this.addExpressionSize(expression.body),expression.width=expression.body.width,expression.height=expression.body.height+2):expression.type===APPLICATION?(this.addExpressionSize(expression.function),this.addExpressionSize(expression.input),expression.width=expression.function.width+expression.input.width+1,expression.height=Math.max(expression.function.height,expression.input.height)+2):(expression.width=3,expression.height=0)}addExpressionLocation(expression){expression.type===LAMBDA?(expression.body.row=expression.row+2,expression.body.col=expression.col,this.addExpressionLocation(expression.body)):expression.type===APPLICATION&&(expression.function.row=expression.row,expression.function.col=expression.col,expression.input.row=expression.row,expression.input.col=expression.col+expression.function.width+1,this.addExpressionLocation(expression.function),this.addExpressionLocation(expression.input))}addExpressionBindings(expression,bindings={},argumentRewriteMap={},argumentsSeen=[]){var e;expression.type===LITERAL?(expression.value in argumentRewriteMap&&(expression.value=argumentRewriteMap[expression.value]),expression.bindingLambda=bindings[expression.value]):expression.type===LAMBDA?argumentsSeen.includes(expression.argument)?(this.nextUniqueArgument++,e=expression.argument,expression.argument=this.nextUniqueArgument,this.addExpressionBindings(expression.body,{...bindings,[expression.argument]:expression},{...argumentRewriteMap,[e]:this.nextUniqueArgument},argumentsSeen)):(argumentsSeen.push(expression.argument),this.addExpressionBindings(expression.body,{...bindings,[expression.argument]:expression},argumentRewriteMap,argumentsSeen)):expression.type===APPLICATION&&(this.addExpressionBindings(expression.function,bindings,argumentRewriteMap,argumentsSeen),this.addExpressionBindings(expression.input,bindings,argumentRewriteMap,argumentsSeen))}addExpressionColors(expression){var e,s,r,i;expression.type===LITERAL?expression.color=expression.bindingLambda.literalColor:expression.type===LAMBDA?(this.addExpressionColors(expression.body),expression.color=expression.body.color):(this.addExpressionColors(expression.function),this.addExpressionColors(expression.input),e=expression.function.color.h,s=expression.input.color.h,r=expression.function.color.s,i=expression.input.color.s,expression.color={h:Math.abs(e-s)<=.5?(e+s)/2:(e+s+1)/2%1,s:Math.max((r+i)/2-.1,.1),v:1})}addExpressionRects(expression,isBetaReduction){if(expression.type===LAMBDA){var e=hsvToRgb(expression.literalColor.h,expression.literalColor.s,expression.literalColor.v),e=[{type:LAMBDA,color:convertColor(...e),row:expression.row,col:expression.col,width:expression.width,height:1}];isBetaReduction?(expression.rects[0].row=e[0].row,expression.rects[0].col=e[0].col,expression.rects[0].width=e[0].width,expression.rects[0].height=e[0].height,expression.rects[0].color=e[0].color):expression.rects=e,this.addExpressionRects(expression.body,isBetaReduction)}else if(expression.type===APPLICATION){var e=hsvToRgb(expression.function.color.h,expression.function.color.s,expression.function.color.v),e={type:CONNECTOR,color:convertColor(...e),col:expression.col+1,width:1},s=(expression.function.type!==LAMBDA&&expression.function.type===LITERAL?e.row=expression.function.bindingLambda.row+1:e.row=expression.function.row+expression.function.height-1,e.height=expression.row+expression.height-3-e.row+1,hsvToRgb(expression.input.color.h,expression.input.color.s,expression.input.color.v)),s={type:CONNECTOR,color:convertColor(...s),col:expression.col+expression.function.width+2,width:1},r=(expression.input.type!==LAMBDA&&expression.input.type===LITERAL?s.row=expression.input.bindingLambda.row+1:s.row=expression.input.row+expression.input.height-1,s.height=expression.row+expression.height-3-s.row+1,hsvToRgb(expression.color.h,expression.color.s,expression.color.v)),i=[{type:APPLICATION,color:convertColor(...r),row:expression.row+expression.height-2,col:expression.col+1,width:expression.function.width+2,height:1},e,s];if(isBetaReduction)for(let e=0;e<3;e++)expression.rects[e].row=i[e].row,expression.rects[e].col=i[e].col,expression.rects[e].width=i[e].width,expression.rects[e].height=i[e].height,expression.rects[e].color=i[e].color;else expression.rects=i;this.addExpressionRects(expression.function,isBetaReduction),this.addExpressionRects(expression.input,isBetaReduction)}else{r=hsvToRgb(expression.color.h,expression.color.s,expression.color.v),e=[{type:LITERAL,color:convertColor(...r),row:expression.bindingLambda.row+1,col:expression.col+1,width:1,height:expression.row-1-(expression.bindingLambda.row+1)+1}];isBetaReduction?(expression.rects[0].row=e[0].row,expression.rects[0].col=e[0].col,expression.rects[0].width=e[0].width,expression.rects[0].height=e[0].height):expression.rects=e}}addExpressionRectIndices(expression,rectIndex){if(expression.type===LAMBDA)void 0===expression.rects[0].id&&(expression.rects[0].id=this.nextId,this.nextId++),rectIndex[expression.rects[0].id]=expression.rects[0],this.addExpressionRectIndices(expression.body,rectIndex);else if(expression.type===APPLICATION){for(let e=0;e<3;e++)void 0===expression.rects[e].id&&(expression.rects[e].id=this.nextId,this.nextId++),rectIndex[expression.rects[e].id]=expression.rects[e];this.addExpressionRectIndices(expression.function,rectIndex),this.addExpressionRectIndices(expression.input,rectIndex)}else void 0===expression.rects[0].id&&(expression.rects[0].id=this.nextId,this.nextId++),rectIndex[expression.rects[0].id]=expression.rects[0]}removeExpressionRectIndices(expression){if(expression.type===LAMBDA)expression.rects[0].id=void 0,this.removeExpressionRectIndices(expression.body);else if(expression.type===APPLICATION){for(let e=0;e<3;e++)expression.rects[e].id=void 0;this.removeExpressionRectIndices(expression.function),this.removeExpressionRectIndices(expression.input)}else expression.rects[0].id=void 0}drawExpression(expression){this.outerExpressionSize=Math.max(expression.width,expression.height),this.resolution=Math.round(clamp(this.resolution,2e3,5e3)/(this.outerExpressionSize+2))*(this.outerExpressionSize+2),this.wilson.resizeCanvas({width:this.resolution}),this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.drawExpressionStep(expression)}drawExpressionStep(expression){for(const s of expression.rects){this.wilson.ctx.fillStyle=s.color;var e=this.resolution/(this.outerExpressionSize+2);this.wilson.ctx.fillRect(e*(s.col+1),e*(s.row+1),e*s.width,e*s.height)}expression.type===LAMBDA?this.drawExpressionStep(expression.body):expression.type===APPLICATION&&(this.drawExpressionStep(expression.function),this.drawExpressionStep(expression.input))}expressionToString({expression,addHtml=!0,addParentheses=!1,useForSelfInterpreter=!1}){var e=expression.startText??"",s=expression.endText??"",r=siteSettings.darkTheme?1:.7;if(expression.type===LITERAL){const o=expression.bindingLambda.literalColor,p=hsvToRgb(o.h,o.s,o.v*r),x=convertColor(...p);var i=useForSelfInterpreter?"λa.λb.λc."+expression.valueText:expression.valueText;return expression.shorthandText?addHtml?`<span style="color: ${x}">${e.slice(1)}${expression.shorthandText}${s.slice(1)}</span>`:""+e.slice(1)+expression.shorthandText+s.slice(1):addHtml?`<span style="color: ${x}">${e}${i}${s}</span>`:""+e+i+s}if(expression.type===LAMBDA){var i=expression.literalColor,i=hsvToRgb(i.h,i.s,i.v*r),i=convertColor(...i);const o=expression.color,p=hsvToRgb(o.h,o.s,o.v*r),x=convertColor(...p);var t=useForSelfInterpreter?`λa.λb.λc.c(λ${expression.argumentText}.`:`λ${expression.argumentText}.`,n=this.expressionToString({expression:expression.body,addHtml:addHtml,addParentheses:addParentheses,useForSelfInterpreter:useForSelfInterpreter}),n=useForSelfInterpreter?n+")":n;return expression.shorthandText?addHtml?`<span style="color: ${x}">${e.slice(1)}${expression.shorthandText}${s.slice(1)}</span>`:""+e.slice(1)+expression.shorthandText+s.slice(1):addHtml?`<span style="color: ${x}">${e}</span><span style="color: ${i}">${t}</span>${n}<span style="color: ${x}">${s}</span>`:e+t+n+s}addParentheses&&1<(i=this.expressionToString({expression:expression.function,addHtml:!1,addParentheses:addParentheses,useForSelfInterpreter:useForSelfInterpreter})).length&&"("!==i[0]&&(expression.function.startText="("+(expression.function.startText??""),expression.function.endText=(expression.function.endText??"")+")");t=this.expressionToString({expression:expression.function,addHtml:addHtml,addParentheses:addParentheses,useForSelfInterpreter:useForSelfInterpreter}),addParentheses&&1<(n=this.expressionToString({expression:expression.input,addHtml:!1,addParentheses:addParentheses,useForSelfInterpreter:useForSelfInterpreter})).length&&"("!==n[0]&&(expression.input.startText="("+(expression.input.startText??""),expression.input.endText=(expression.input.endText??"")+")"),i=this.expressionToString({expression:expression.input,addHtml:addHtml,addParentheses:addParentheses,useForSelfInterpreter:useForSelfInterpreter});const o=expression.color,p=hsvToRgb(o.h,o.s,o.v*r),x=convertColor(...p);n=useForSelfInterpreter?`λa.λb.λc.b(${t}${i})`:""+t+i;return expression.shorthandText?addHtml?`<span style="color: ${x}">${e.slice(1)}${expression.shorthandText}${s.slice(1)}</span>`:""+e.slice(1)+expression.shorthandText+s.slice(1):addHtml?`<span style="color: ${x}">${e}</span>${n}<span style="color: ${x}">${s}</span>`:e+n+s}isSubexpressionOf(subexpressionString,expressionString){let e=0;for(const s of expressionString)if(s===subexpressionString[e]&&e++,e===subexpressionString.length)return!0;return!1}listAllBetaReductions(expression){var e,s,r,i,t;return expression.type===APPLICATION?(e=this.listAllBetaReductions(expression.function).map(reduction=>{var e=structuredClone(expression);return e.function=reduction,e}),s=this.listAllBetaReductions(expression.input).map(reduction=>{var e=structuredClone(expression);return e.input=reduction,e}),expression.function.type===LAMBDA?(t=(i=structuredClone(expression)).function.body,r=i.function,i=i.input,this.removeExpressionRectIndices(i),t=this.computeBetaReduction(t,r,i),[...e,...s,t]):[...e,...s]):expression.type===LAMBDA?this.listAllBetaReductions(expression.body).map(reduction=>{var e=structuredClone(expression);return e.body=reduction,e}):[]}computeBetaReduction(expression,bindingLambdaToReplace,replacementValue){if(expression.type===LITERAL){if(expression.bindingLambda===bindingLambdaToReplace)return structuredClone(replacementValue)}else expression.type===LAMBDA?expression.body=this.computeBetaReduction(expression.body,bindingLambdaToReplace,replacementValue):(expression.function=this.computeBetaReduction(expression.function,bindingLambdaToReplace,replacementValue),expression.input=this.computeBetaReduction(expression.input,bindingLambdaToReplace,replacementValue));return expression}async*animateBetaReduction(expression,betaReducedExpression){const p=structuredClone(expression.rectIndex),i=structuredClone(betaReducedExpression.rectIndex),o=Object.keys(expression.rectIndex).filter(rectId=>rectId in betaReducedExpression.rectIndex);var e=Object.keys(expression.rectIndex).filter(rectId=>!(rectId in betaReducedExpression.rectIndex)).sort((a,b)=>p[a].row+p[a].height!==p[b].row+p[b].height?p[a].row+p[a].height-(p[b].row+p[b].height):p[a].col-p[b].col),s=Object.keys(betaReducedExpression.rectIndex).filter(rectId=>!(rectId in expression.rectIndex)).sort((a,b)=>parseInt(a)-parseInt(b));const x=[];let r=e.length-1;for(;x.length<3;)p[e[r]].type!==APPLICATION&&p[e[r]].type!==CONNECTOR||x.push(e[r]),r--;const n=e.find(key=>p[key].type===LAMBDA),d=[n].concat(e.filter(key=>p[key].type===LITERAL&&p[key].row===p[n].row+1&&p[key].col>=p[n].col&&p[key].col<p[n].col+p[n].width)),c=e.filter(key=>!(x.includes(key)||d.includes(key)));var l=[];for(let k=0;k<s.length;k+=c.length)l.push(s.slice(k,k+c.length).sort((a,b)=>i[a].row+i[a].height!==i[b].row+i[b].height?i[a].row+i[a].height-(i[b].row+i[b].height):i[a].col-i[b].col));const h=l.flat(),u=c.every(key=>p[key].type===LITERAL||p[key].type===CONNECTOR);let g=1/0,f=1/0,m=0,w=0;for(const O of c){var R=p[O];g=Math.min(g,R.row),f=Math.min(f,R.col),m=Math.max(m,R.row+R.height),w=Math.max(w,R.col+R.width)}var E=w-f,I=m-g;const y=Math.max(expression.width,expression.height),S=Math.max(betaReducedExpression.width,betaReducedExpression.height),T=0===h.length||u?S:Math.max(Math.max(betaReducedExpression.width,E),betaReducedExpression.height+2*(6+I));I=betaReducedExpression.row-3-I,E=(S-E)/2;const v=I-g,A=E-f,L=u?0:(T-betaReducedExpression.height)/2-betaReducedExpression.row,C=u?0:(T-betaReducedExpression.width)/2-betaReducedExpression.col;for(const O of o)betaReducedExpression.rectIndex[O].row+=L,betaReducedExpression.rectIndex[O].col+=C;const B=Object.fromEntries(Object.entries(expression.rectIndex).map(([key,value])=>[key,getRgbFromColorString(value.color)])),P=Object.fromEntries(Object.entries(betaReducedExpression.rectIndex).map(([key,value])=>[key,getRgbFromColorString(value.color)]));var M=h.length/c.length;if(h.length%c.length!=0&&!u)throw new Error("Chunking failed.");if(await animate(t=>{this.outerExpressionSize=y;for(const i of x){expression.rectIndex[i].row=p[i].row+t;var e=getRgbFromColorString(p[i].color);expression.rectIndex[i].color=convertColor(...e,1-t)}for(const n of d){expression.rectIndex[n].row=p[n].row-t;var s=getRgbFromColorString(p[n].color);expression.rectIndex[n].color=convertColor(...s,1-t)}if(0===h.length||u)for(const o of c){var r=getRgbFromColorString(p[o].color);expression.rectIndex[o].color=convertColor(...r,1-t)}this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.drawExpressionStep(expression)},.5*this.animationTime,"easeInOutQuad"),yield await sleep(this.animationTime/3),await animate(t=>{this.outerExpressionSize=(1-t)*y+t*T;for(const i of o){expression.rectIndex[i].row=(1-t)*p[i].row+t*betaReducedExpression.rectIndex[i].row,expression.rectIndex[i].col=(1-t)*p[i].col+t*betaReducedExpression.rectIndex[i].col,expression.rectIndex[i].width=(1-t)*p[i].width+t*betaReducedExpression.rectIndex[i].width,expression.rectIndex[i].height=(1-t)*p[i].height+t*betaReducedExpression.rectIndex[i].height;var e=(1-t)*B[i][0]+t*P[i][0],s=(1-t)*B[i][1]+t*P[i][1],r=(1-t)*B[i][2]+t*P[i][2];expression.rectIndex[i].color=convertColor(e,s,r)}for(const n of c)expression.rectIndex[n].row=p[n].row+t*(v+L),expression.rectIndex[n].col=p[n].col+t*(A+C);this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.drawExpressionStep(expression)},this.animationTime,"easeInOutQuad"),yield await sleep(this.animationTime/6),u)this.drawExpression(betaReducedExpression),yield await sleep(this.animationTime/6);else{for(let s=0;s<M;s++)for(let e=c.length*s;e<c.length*(s+1);e++){var F=c[e%c.length],O=h[e];betaReducedExpression.rectIndex[O].row=expression.rectIndex[F].row,betaReducedExpression.rectIndex[O].col=expression.rectIndex[F].col,betaReducedExpression.rectIndex[O].width=expression.rectIndex[F].width,betaReducedExpression.rectIndex[O].height=expression.rectIndex[F].height}const N=structuredClone(betaReducedExpression.rectIndex);for(let r=0;r<M-1;r++)await animate(t=>{this.outerExpressionSize=T;for(let s=c.length*r;s<c.length*(r+1);s++){var e=h[s];betaReducedExpression.rectIndex[e].row=(1-t)*N[e].row+t*(i[e].row+L),betaReducedExpression.rectIndex[e].col=(1-t)*N[e].col+t*(i[e].col+C),betaReducedExpression.rectIndex[e].width=(1-t)*N[e].width+t*i[e].width,betaReducedExpression.rectIndex[e].height=(1-t)*N[e].height+t*i[e].height}this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.drawExpressionStep(betaReducedExpression)},1.5*this.animationTime/M,"easeInOutQuad");for(let e=0;e<c.length*(M-1);e++){const O=h[e];N[O].row=betaReducedExpression.rectIndex[O].row,N[O].col=betaReducedExpression.rectIndex[O].col,N[O].width=betaReducedExpression.rectIndex[O].width,N[O].height=betaReducedExpression.rectIndex[O].height}0!==h.length&&await animate(t=>{this.outerExpressionSize=(1-t)*T+t*S;for(const e in i)betaReducedExpression.rectIndex[e].row=(1-t)*N[e].row+t*i[e].row,betaReducedExpression.rectIndex[e].col=(1-t)*N[e].col+t*i[e].col,betaReducedExpression.rectIndex[e].width=(1-t)*N[e].width+t*i[e].width,betaReducedExpression.rectIndex[e].height=(1-t)*N[e].height+t*i[e].height;this.wilson.ctx.fillStyle="rgb(0, 0, 0)",this.wilson.ctx.fillRect(0,0,this.resolution,this.resolution),this.drawExpressionStep(betaReducedExpression)},1.5*this.animationTime/M,"easeInOutQuad"),this.drawExpression(betaReducedExpression),yield await sleep(this.animationTime/3)}}async animateIteratedBetaReduction(expression,maxBetaReductions,updateExpressionDuringReduction){this.animationRunning=!0;let r=this.expressionToString({expression:expression,addHtml:!1}),i=r.replaceAll(/a-zA-Z/g,"x").replaceAll(/\(\)/g,"");e:for(let e=0;e<maxBetaReductions;e++){var s=this.listAllBetaReductions(expression).map(reduction=>{var e=this.expressionToString({expression:reduction,addHtml:!1}),s=e.replaceAll(/a-zA-Z/g,"x").replaceAll(/\(\)/g,"");return{expression:reduction,expressionString:e,collapsedExpressionString:s,isNestedBadly:this.isSubexpressionOf(i,s),isNestedVeryBadly:this.isSubexpressionOf(r,e)}});if(0===s.length)break;var s=s.sort((a,b)=>!a.isNestedVeryBadly&&b.isNestedVeryBadly?-1:a.isNestedVeryBadly&&!b.isNestedVeryBadly?1:!a.isNestedBadly&&b.isNestedBadly?-1:a.isNestedBadly&&!b.isNestedBadly?1:a.expressionString.length-b.expressionString.length),t=(this.setupExpression(s[0].expression,!0),this.animateBetaReduction(expression,s[0].expression));for await(const n of t){if(this.needReload)break e;this.animationPaused&&await new Promise(resolve=>{addTemporaryInterval(setInterval(()=>{this.animationPaused||resolve()}),100)})}expression=s[0].expression,r=s[0].expressionString,i=s[0].collapsedExpressionString,this.expressionTextarea&&updateExpressionDuringReduction&&(this.worker&&this.worker.terminate(),this.worker=addTemporaryWorker("/applets/lambda-calculus/scripts/worker.js"),this.worker.onmessage=e=>{const{text:s,html:r}=e.data;this.expressionTextarea.setValue(s),this.expressionTextarea.overlayElement.innerHTML=r,requestAnimationFrame(()=>{this.expressionTextarea.overlayElement.innerHTML=r}),setTimeout(()=>{this.expressionTextarea.overlayElement.innerHTML=r},16),setTimeout(()=>{this.expressionTextarea.overlayElement.innerHTML=r},33)},this.worker.postMessage({expression:expression,darkTheme:siteSettings.darkTheme,browserSupportsP3:browserSupportsP3,browserSupportsRec2020:browserSupportsRec2020}))}this.needReload&&(this.needReload=!1,this.reloadedResolve()),this.animationRunning=!1}}export{LambdaCalculus};