import{changeOpacity}from"./animation.min.js";import{loadScript,raw}from"./main.min.js";import{siteSettings}from"./settings.min.js";let desmosPurple="#772fbf",desmosBlue="#2f77bf",desmosRed="#bf2f2f",desmosGreen="#2fbf2f";const desmosBlack="#000000",desmosPurple3d="#772fbf",desmosBlue3d="#2f77bf",desmosRed3d="#bf2f2f",desmosGreen3d="#2fbf2f",desmosGray3d="#777777";function updateDesmosColors(){desmosPurple=siteSettings.darkTheme?"#60c000":"#772fbf",desmosBlue=siteSettings.darkTheme?"#c06000":"#2f77bf",desmosRed=siteSettings.darkTheme?"#00c0c0":"#bf2f2f",desmosGreen=siteSettings.darkTheme?"#c000c0":"#2fbf2f"}let desmosGraphs={};function clearDesmosGraphs(){desmosGraphs={}}let getDesmosData=()=>({});function setGetDesmosData(newGetDesmosData){getDesmosData=newGetDesmosData}async function createDesmosGraphs(recreating=!1){if(!window.OFFLINE){await loadScript("/scripts/desmos.min.js");for(const a in desmosGraphs)desmosGraphs[a]?.destroy&&desmosGraphs[a].destroy();desmosGraphs={},updateDesmosColors();var s=getDesmosData();for(const d in s)for(const n of s[d].expressions)n.latex=n.latex.replace(/\(/g,raw`\left(`),n.latex=n.latex.replace(/\)/g,raw`\right)`),n.latex=n.latex.replace(/\[/g,raw`\left[`),n.latex=n.latex.replace(/\]/g,raw`\right]`);for(const m of document.body.querySelectorAll(".desmos-container")){let e=!1;for(const l of s[m.id].expressions)if(!l.secret){e=!0;break}var t,o={keypad:!1,settingsMenu:!1,zoomButtons:!1,showResetButtonOnGraphpaper:!0,border:!1,expressionsCollapsed:!0,invertedColors:siteSettings.darkTheme,xAxisMinorSubdivisions:1,yAxisMinorSubdivisions:1,expressions:e,...s[m.id].options??{}},r=s[m.id].use3d?Desmos.Calculator3D:Desmos.GraphingCalculator,r=(desmosGraphs[m.id]=r(m,o),s[m.id].bounds),i=m.getBoundingClientRect(),i=i.width/i.height;void 0===r.xmin&&void 0!==r.left&&(r.xmin=r.left,delete r.left),void 0===r.xmax&&void 0!==r.right&&(r.xmax=r.right,delete r.right),void 0===r.ymin&&void 0!==r.bottom&&(r.ymin=r.bottom,delete r.bottom),void 0===r.ymax&&void 0!==r.top&&(r.ymax=r.top,delete r.top),void 0!==o.showPlane3D&&(desmosGraphs[m.id].controller.graphSettings.showPlane3D=o.showPlane3D),s[m.id].use3d||(o=r.xmax-r.xmin,t=(r.xmin+r.xmax)/2,r.xmin=t-o/2*i,r.xmax=t+o/2*i),desmosGraphs[m.id].setMathBounds(r),desmosGraphs[m.id].setExpressions(s[m.id].expressions),desmosGraphs[m.id].controller.graphSettings.showBox3D=!1,desmosGraphs[m.id].updateSettings({}),desmosGraphs[m.id].setDefaultState(desmosGraphs[m.id].getState()),window.DEBUG&&!recreating&&m.addEventListener("click",e=>{e.metaKey&&getDesmosScreenshot(m.id,e.altKey)})}}}async function recreateDesmosGraphs(){var e=Array.from(document.body.querySelectorAll(".desmos-container"));e&&(await Promise.all(e.map(element=>changeOpacity({element:element,opacity:0}))),await createDesmosGraphs(!0),await Promise.all(e.map(element=>changeOpacity({element:element,opacity:1}))))}function getDesmosScreenshot(id,forPdf=!1){if(desmosGraphs[id].controller.graphSettings.showPlane3D=!1,desmosGraphs[id].controller.graphSettings.showNumbers3D=forPdf,desmosGraphs[id].controller.graphSettings.showAxisLabels3D=forPdf,desmosGraphs[id].updateSettings({showGrid:forPdf,xAxisNumbers:forPdf,yAxisNumbers:forPdf}),!desmosGraphs[id].getState().graph.threeDMode){var s=desmosGraphs[id].getExpressions();for(let e=0;e<s.length;e++)s[e].lineWidth=forPdf?2.5:15,s[e].pointSize=forPdf?10:50,s[e].dragMode="NONE";desmosGraphs[id].setExpressions(s)}var e=desmosGraphs[id].screenshot({width:400,height:400,targetPixelRatio:8}),t=document.createElement("img");t.width=4e3,t.height=4e3,t.style.width="50vmin",t.style.height="50vmin",t.src=e,document.body.appendChild(t)}let uid=0;function getDesmosPoint({point,color,dragMode="XY",style="POINT",secret=!0}){return[{latex:raw`(${point[0]}, ${point[1]})`,dragMode:dragMode,pointStyle:style,color:color,secret:secret}]}function getDesmosSlider({expression,min,max,step,secret=!0}){return[{latex:raw`${expression}`,sliderBounds:{min:min,max:max,step:step},secret:secret}]}function getDesmosVector({from,to,color,secret=!0,lineStyle="SOLID"}){return uid++,[{latex:raw`((${from[0]}), (${from[1]})), ((${to[0]}), (${to[1]}))`,color:color,lines:!0,points:!1,secret:secret,lineStyle:lineStyle},{latex:raw`s_{${uid}} = \arctan(${to[1]} - (${from[1]}), ${to[0]} - (${from[0]}))`,secret:secret},{latex:raw`((${to[0]}), (${to[1]})), ((${to[0]}) - .35\cos(s_{${uid}} + .5), (${to[1]}) - .35\sin(s_{${uid}} + .5))`,color:color,lines:!0,points:!1,secret:secret},{latex:raw`((${to[0]}), (${to[1]})), ((${to[0]}) - .35\cos(s_{${uid}} - .5), (${to[1]}) - .35\sin(s_{${uid}} - .5))`,color:color,lines:!0,points:!1,secret:secret}]}export{desmosPurple,desmosBlue,desmosRed,desmosGreen,desmosBlack,desmosPurple3d,desmosBlue3d,desmosRed3d,desmosGreen3d,desmosGray3d,desmosGraphs,clearDesmosGraphs,setGetDesmosData,createDesmosGraphs,recreateDesmosGraphs,getDesmosScreenshot,getDesmosPoint,getDesmosSlider,getDesmosVector};